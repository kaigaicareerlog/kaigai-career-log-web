name: Update RSS Feed

on:
  # 毎日午後4時（バンクーバー時間）に実行（UTC 23:00）
  # Runs daily at 4pm Vancouver time (23:00 UTC = 4pm PDT / 3pm PST)
  schedule:
    - cron: '0 23 * * *'

  # 手動実行も可能
  workflow_dispatch:

jobs:
  update-rss:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Set timestamp
        id: timestamp
        run: |
          echo "datetime=$(TZ=Asia/Tokyo date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT

      - name: Download latest RSS feed
        run: |
          FILENAME="public/rss/${{ steps.timestamp.outputs.datetime }}-rss-file.xml"
          curl -o "$FILENAME" https://anchor.fm/s/105976b60/podcast/rss
          echo "New RSS file created: $FILENAME"

      - name: Convert XML to JSON
        run: |
          XMLFILE="public/rss/${{ steps.timestamp.outputs.datetime }}-rss-file.xml"
          JSONFILE="public/rss/${{ steps.timestamp.outputs.datetime }}-podcast-data.json"
          npx tsx scripts/xml-to-json.ts "$XMLFILE" "$JSONFILE"
          echo "Converted XML to JSON: $JSONFILE"

      - name: Generate episodes.json
        run: |
          JSONFILE="public/rss/${{ steps.timestamp.outputs.datetime }}-podcast-data.json"
          EPISODESFILE="public/rss/${{ steps.timestamp.outputs.datetime }}-episodes.json"
          npx tsx scripts/generate-episodes.ts "$JSONFILE" "$EPISODESFILE"
          echo "Generated episodes.json: $EPISODESFILE"

      - name: Update Spotify and YouTube URLs for new episodes
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          EPISODESFILE="public/rss/${{ steps.timestamp.outputs.datetime }}-episodes.json"
          echo "Finding Spotify and YouTube URLs for new episodes..."
          npx tsx scripts/update-new-episode-urls.ts "$EPISODESFILE"

      - name: Find new episodes for transcription
        id: episodes
        run: |
          PODCASTFILE="public/rss/${{ steps.timestamp.outputs.datetime }}-podcast-data.json"
          echo "Finding new episodes by comparing podcast data files..."
          EPISODES_JSON=$(npx tsx scripts/find-episodes-without-transcripts.ts "$PODCASTFILE")
          echo "New episodes to transcribe: $EPISODES_JSON"
          echo "episodes=$EPISODES_JSON" >> $GITHUB_OUTPUT

      - name: Transcribe and generate highlights for new episodes
        if: steps.episodes.outputs.episodes != '[]' && steps.episodes.outputs.episodes != ''
        env:
          ASSEMBLYAI_API_KEY: ${{ secrets.ASSEMBLYAI_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
        run: |
          # Parse the JSON array of episodes
          EPISODES='${{ steps.episodes.outputs.episodes }}'
          echo "$EPISODES" | jq -r '.[].guid' | while read -r GUID; do
            if [ -n "$GUID" ]; then
              echo "Processing episode: $GUID"
              
              # Transcribe episode
              echo "Transcribing episode $GUID..."
              npm run transcribe "$GUID" || echo "Warning: Transcription failed for $GUID"
              
              # Cleanup transcript
              echo "Cleaning up transcript for $GUID..."
              npx tsx scripts/cleanup-transcript.ts "$GUID" || echo "Warning: Cleanup failed for $GUID"
              
              # Generate highlights
              echo "Generating highlights for $GUID..."
              npm run generate-highlights "$GUID" || echo "Warning: Highlight generation failed for $GUID"
              
              echo "Completed processing for episode $GUID"
            fi
          done

      - name: Delete old files (older than 3 days)
        run: |
          cd public/rss
          find . -name "*-rss-file.xml" -type f -mtime +3 -delete
          find . -name "*-podcast-data.json" -type f -mtime +3 -delete
          find . -name "*-episodes.json" -type f -mtime +3 -delete
          echo "Deleted files older than 3 days"

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add public/rss/
          git add public/transcripts/
          git diff --staged --quiet || git commit -m "chore: Update RSS feed and transcripts - ${{ steps.timestamp.outputs.datetime }}"
          git push
