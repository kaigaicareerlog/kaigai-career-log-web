---
/**
 * Base Modal Component
 * Reusable modal with customizable content and keyboard shortcuts
 */

interface Props {
  id: string;
  title?: string;
  showFooter?: boolean;
}

const { id, title, showFooter = true } = Astro.props;
---

<div id={id} class="modal-overlay">
  <div class="modal-content">
    <div class="modal-header">
      <h2 id={`${id}-title`} class="modal-title">
        {title || <slot name="title" />}
      </h2>
      <button class="close-btn" id={`${id}-close`} aria-label="Close modal">Ã—</button>
    </div>
    
    <div class="modal-body">
      <slot />
    </div>
    
    {showFooter && (
      <div class="modal-footer">
        <slot name="footer" />
      </div>
    )}
  </div>
</div>

<style>
  .modal-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    z-index: 1000;
    padding: 1rem;
    overflow-y: auto;
    animation: fadeIn 0.2s ease-in-out;
  }

  .modal-overlay.active {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .modal-content {
    background: var(--color-background);
    border-radius: 1rem;
    max-width: 600px;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    animation: slideUp 0.3s ease-out;
  }

  @keyframes slideUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }

  .modal-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem;
    border-bottom: 1px solid rgba(59, 130, 246, 0.1);
  }

  .modal-title {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text);
    flex: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    padding-right: 1rem;
  }

  .close-btn {
    background: none;
    border: none;
    font-size: 2rem;
    line-height: 1;
    color: var(--color-muted);
    cursor: pointer;
    padding: 0;
    width: 2rem;
    height: 2rem;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.5rem;
    transition: all 0.2s ease;
    flex-shrink: 0;
  }

  .close-btn:hover {
    background-color: rgba(239, 68, 68, 0.1);
    color: #ef4444;
  }

  .modal-body {
    padding: 1.5rem;
  }

  .modal-footer {
    padding: 1rem 1.5rem;
    border-top: 1px solid rgba(59, 130, 246, 0.1);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .modal-content {
      margin: auto;
      max-height: calc(100vh - 2rem);
    }

    .modal-title {
      font-size: 1.1rem;
    }

    .modal-body {
      padding: 1rem;
    }
  }
</style>

