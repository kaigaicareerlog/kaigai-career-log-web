---
interface SocialLink {
  href: string;
  icon: string;
  title: string;
  isEmoji?: boolean;
}

interface Props {
  name: string;
  bio: string;
  avatar?: string;
  socialLinks: SocialLink[];
}

const { name, bio, avatar, socialLinks } = Astro.props;
---

<div class="host-item">
  {avatar && <img src={avatar} alt={name} class="host-avatar" />}
  <div class="host-info">
    <h3>{name}</h3>
    <p class="bio">{bio}</p>
  </div>
  <div class="host-social">
    {
      socialLinks.map((link) => (
        <a
          href={link.href}
          target="_blank"
          rel="noopener noreferrer"
          class={`social-link ${link.isEmoji ? 'emoji' : ''}`}
          title={link.title}
        >
          {link.isEmoji ? (
            <span>{link.icon}</span>
          ) : (
            <img src={link.icon} alt={link.title} class="social-icon" />
          )}
        </a>
      ))
    }
  </div>
</div>

<style>
  .host-item {
    display: flex;
    gap: 1.5rem;
    align-items: center;
    padding: 1.5rem 2rem;
    background: var(--color-background);
    border-radius: 1rem;
    border-left: 4px solid transparent;
    border-image: linear-gradient(
        135deg,
        var(--color-primary),
        var(--color-secondary)
      )
      1;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
  }

  .host-item:hover {
    transform: translateX(8px);
    box-shadow: 0 6px 24px rgba(59, 130, 246, 0.15);
  }

  .host-avatar {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    object-fit: cover;
    border: 3px solid rgba(14, 165, 233, 0.2);
    transition: all 0.3s ease;
  }

  .host-item:hover .host-avatar {
    border-color: var(--color-primary);
    transform: scale(1.05);
  }

  .host-info {
    flex: 1;
  }

  .host-item h3 {
    font-size: 1.5rem;
    font-weight: 700;
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.25rem;
  }

  .bio {
    color: var(--color-muted);
    font-style: italic;
    font-size: 0.95rem;
  }

  .host-social {
    display: flex;
    gap: 0.5rem;
  }

  .social-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 36px;
    height: 36px;
    min-width: 36px;
    min-height: 36px;
    border-radius: 0.5rem;
    background: rgba(14, 165, 233, 0.08);
    border: 1.5px solid rgba(14, 165, 233, 0.2);
    text-decoration: none;
    font-size: 1.2rem;
    transition: all 0.3s ease;
  }

  .social-link:hover {
    background: rgba(14, 165, 233, 0.15);
    border-color: var(--color-primary);
    transform: scale(1.1);
  }

  .social-icon {
    width: 20px;
    height: 20px;
    min-width: 20px;
    min-height: 20px;
    object-fit: contain;
  }

  .social-link.emoji {
    font-size: 1.3rem;
    line-height: 1;
  }

  /* Mobile responsive */
  @media (max-width: 768px) {
    .host-item {
      flex-direction: row;
      gap: 1rem;
      padding: 1.25rem 1.5rem;
    }

    .host-item:hover {
      transform: translateY(-4px) translateX(0);
    }

    .host-avatar {
      width: 60px;
      height: 60px;
    }

    .host-info {
      flex: 1;
    }

    .host-social {
      flex-direction: column;
    }
  }

  /* Dark mode support */
  @media (prefers-color-scheme: dark) {
    .host-item {
      background: rgba(15, 23, 42, 0.8);
    }
  }
</style>
